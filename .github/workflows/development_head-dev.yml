# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and Deploy - head-dev

on:
  push:
    branches:
      - development
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout
      actions: write #This is required for actions/upload-artifact

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0"

      - name: Check DOTNET_ROOT
        run: echo "DOTNET_ROOT is $DOTNET_ROOT"
  
      - name: Restore dependencies
        run: dotnet restore Server/Server.csproj
  
      - name: Build with dotnet
        run: dotnet build Server/Server.csproj --configuration Release --no-restore
  
      - name: Build tests
        run: dotnet build Server.Tests/Server.Tests.csproj --configuration Release
  
      - name: Run tests
        run: dotnet test Server.Tests/Server.Tests.csproj --configuration Release --no-build --verbosity normal
        continue-on-error: true
  
      - name: Publish with dotnet
        run: dotnet publish Server/Server.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp
  
      - name: Copy ServerLibrary Templates
        run: |
            mkdir -p ${{env.DOTNET_ROOT}}/myapp/ServerLibrary/Templates
            cp -r ServerLibrary/Templates/* ${{env.DOTNET_ROOT}}/myapp/ServerLibrary/Templates/
            ls -la ${{env.DOTNET_ROOT}}/myapp/ServerLibrary/Templates/

      - name: Delete old '.net-app' artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const oldArtifacts = artifacts.data.artifacts.filter(({ name }) => name === '.net-app');

            for (const artifact of oldArtifacts) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
              core.info(`Deleted artifact: ${artifact.name} (${artifact.id})`);
            }

            if (oldArtifacts.length === 0) {
              core.info('No old ".net-app" artifacts found to delete.');
            }

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: ${{ github.ref == 'refs/heads/develop' && 'Production' }}
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_24C1FF815FB1407392965800C1A427BC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_709BAEBDD9F14D98ADC2231760F80742 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_37D5841996BA483B8CB5959DD1183E0C }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "head-dev"
          slot-name: "Production"
          package: .
